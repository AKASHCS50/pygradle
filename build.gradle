import org.gradle.api.logging.configuration.ConsoleOutput

apply plugin: 'version'
apply plugin: 'idea'

allprojects {
    group = 'com.linkedin.pygradle'
}

subprojects {
    apply plugin: 'idea'

    buildDir = new File(rootProject.buildDir, path.replace(":", File.separator).substring(0))

    task downloadDependencies {
        description = 'Download all dependencies to help with CI cacheing'
        group = 'CI'
        doLast {
            configurations.each { conf ->
                conf.files
            }
        }
    }

    tasks.withType(Test) { task ->
        if (gradle.startParameter.consoleOutput == ConsoleOutput.Plain) {   //on ci we will see tests as they run
            task.afterTest { TestDescriptor td, TestResult tr ->
                logger.lifecycle("[${tr.resultType}] - ${td.className}#${td.name}")

            }
        }
        task.afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                logger.lifecycle("Task {} results: {} ({} tests, {} successes, {} failures, {} skipped)", task.path,
                    result.resultType, result.testCount, result.successfulTestCount, result.failedTestCount, result.skippedTestCount)
            }
        }
    }

    idea {
        module {
            excludeDirs += buildDir
        }
    }
}

idea {
    project {
        jdkName = '1.8'
        languageLevel = '1.8'
    }
}
